{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactForm","state","name","number","handleInput","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetInput","this","nameId","nanoid","Form","Label","Input","id","type","onChange","pattern","title","required","Button","Component","ContactList","onFilteredContacts","onDeleteContact","List","map","Item","Contact","onClick","Filter","onFindContact","App","contacts","filter","addContact","contact","alreadyFind","find","alert","findContact","getFilterContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","FilterContacts","Title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.220738ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"Label\":\"ContactForm_Label__2Lwof\",\"Input\":\"ContactForm_Input__1tKk0\",\"Button\":\"ContactForm_Button__1WD28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__2kG7o\",\"Item\":\"ContactList_Item__2zmUy\",\"Contact\":\"ContactList_Contact__3m8Gx\",\"Button\":\"ContactList_Button__2HINY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__274rc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2sheC\",\"Input\":\"Filter_Input__TN8JA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","import styles from \"./Container.module.scss\";\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nexport default Container;\n","import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport styles from \"./ContactForm.module.scss\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetInput();\n  };\n\n  resetInput = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const nameId = nanoid();\n\n    return (\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\n        <label className={styles.Label}>\n          Name\n          <input\n            className={styles.Input}\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={styles.Label}>\n          Number\n          <input\n            className={styles.Input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.Button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactList = ({ onFilteredContacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.List}>\n      {onFilteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.Item}>\n          <p className={styles.Contact}>{name}:</p>\n          <p className={styles.Contact}>{number}</p>\n\n          <button\n            type=\"button\"\n            className={styles.Button}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.scss\";\n\nconst Filter = ({ value, onFindContact }) => {\n  return (\n    <label className={styles.Label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        className={styles.Input}\n        onChange={onFindContact}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport styles from \"./App.module.scss\";\n\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport contacts from \"./contacts.json\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const alreadyFind = this.state.contacts.find(\n      (contact) => contact.name === name\n    );\n\n    alreadyFind\n      ? alert(`${name} is already in contacts.`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  findContact = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const FilterContacts = this.getFilterContacts();\n\n    return (\n      <Container>\n        <h1 className={styles.Title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className={styles.Title}>Contacts</h2>\n        <Filter value={filter} onFindContact={this.findContact} />\n        <ContactList\n          onFilteredContacts={FilterContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}